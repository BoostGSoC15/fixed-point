[/
Copyright 2015 Paul A. Bristow.
Copyright 2015 Christopher Kormanyos.
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
http://www.boost.org/LICENSE_1_0.txt).
]

[section:limits32 Numeric limits for 32-bit platform]
These tables were generated using the following program and options:

[pre

Program:
 numeric_limits_qbk.cpp 
Wed Mar 11 17:30:51 2015
BuildInfo:
  Platform Win32
  Compiler Microsoft Visual C++ version 12.0
  MSVC version 180021005.
  STL Dinkumware standard library version 610
  Boost version 1.58.0
]

[table:integral_constants Integer types constants (`std::numeric_limits<T>::is_integer == true` && is_exact == true)
[[type][signed][bound][modulo][round][radix][digits][digits10]]
[[bool][unsigned][bound][no][to zero][2][1][0]]
[[char][signed][bound][modulo][to zero][2][7][2]]
[[unsigned char][unsigned][bound][modulo][to zero][2][8][2]]
[[char16_t][unsigned][bound][modulo][to zero][2][16][4]]
[[char32_t][unsigned][bound][modulo][to zero][2][32][9]]
[[short][signed][bound][modulo][to zero][2][15][4]]
[[unsigned short][unsigned][bound][modulo][to zero][2][16][4]]
[[int][signed][bound][modulo][to zero][2][31][9]]
[[unsigned][unsigned][bound][modulo][to zero][2][32][9]]
[[long][signed][bound][modulo][to zero][2][31][9]]
[[unsigned long][unsigned][bound][modulo][to zero][2][32][9]]
[[long long][signed][bound][modulo][to zero][2][63][18]]
[[unsigned long long][unsigned][bound][modulo][to zero][2][64][19]]
[[int32_t][signed][bound][modulo][to zero][2][31][9]]
[[uint32_t][unsigned][bound][modulo][to zero][2][32][9]]
[[int64_t][signed][bound][modulo][to zero][2][63][18]]
[[uint64_t][unsigned][bound][modulo][to zero][2][64][19]]
]

[table:integral_functions Integer types functions (`std::numeric_limits<T>::is_integer == true && std::numeric_limits<T>::min() == std::numeric_limits<T>::lowest()` )
[[function][max][min]]
[[bool][1][0]]
[[char][127][-128]]
[[unsigned char][255][0]]
[[char16_t][65535][0]]
[[char32_t][4294967295][0]]
[[short][32767][-32768]]
[[unsigned short][65535][0]]
[[int][2147483647][-2147483648]]
[[unsigned int][4294967295][0]]
[[long][2147483647][-2147483648]]
[[unsigned long][4294967295][0]]
[[long long][9223372036854775807][-9223372036854775808]]
[[unsigned long long][18446744073709551615][0]]
[[int32_t][2147483647][-2147483648]]
[[int64_t][9223372036854775807][-9223372036854775808]]]
[table:float_functions Fixed-point types constants (`std::numeric_limits<T>::is_integer==false && is_signed==true && is_modulo==false && is_exact==false && is_bound==true`)
[[type][round][radix][digits][digits10][max_digits10][min_exp][min_exp10][max_exp][max_exp10][tiny][trap]]
[[fixed_point_32,-16][to zero][2][31][31][0][-16][-4][15][4][no][no]]
]
[table:float_functions Floating-point types functions (`std::numeric_limits<T>::is_integer == false`)
[[function][float][double][long double][cpp_dec_50][fp_32,-16]]
[[max][3.40282e+038][1.79769e+308][1.79769e+308][1e+67108864][32768]]
[[min][1.17549e-038][2.22507e-308][2.22507e-308][1e-67108864][1.52588e-005]]
[[epsilon][1.19209e-007][2.22045e-016][2.22045e-016][1e-49][0.000106812]]
[[round_error][0.5][0.5][0.5][0.5][0.5]]
[[infinity][1.#INF][1.#INF][1.#INF][inf][32768]]
[[quiet_NaN][1.#QNAN][1.#QNAN][1.#QNAN][nan][32768]]
]


[endsect] [/section:limits32  Numeric limits for 32-bit platform]

