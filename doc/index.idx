# Copyright 2015 Paul A. Bristow

# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file
# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

# Index file for class fixed_point documentation.

# http://www.boost.org/doc/libs/release/tools/auto_index/doc/html/boost_autoindex/tut/build_docs.html
#
# Rewrite the class scanner to accept declarations, not just definitions,
# as the docs don't include full definitions.

#* If a section merely *mentions* a class then that section does not
# appear in the class's index entry.
#* Likewise if a section merely contains the class's forward declaration,
# then that section doesn't appear in the class's index entry.

# Only if a *full definition* is found will an entry appear in the index.

# This is normally a "good thing".  It means you don't get lots of trivial
# entries, and go straight to the meat of the thing: the section that
# documents the class definition.

# However, it means that if the docs nowhere contain a full definition
# then the class doesn't appear in the index: unless you loosen up the
# regex to catch more uses of the class name thus:

!define-scanner class_name "^[[:space:]]*(template[[:space:]]*<[^;:{]+>[[:space:]]*)?(class|struct)[[:space:]]*(\<\w+\>([[:blank:]]*\([^)]*\))?[[:space:]]*)*(\<\w*\>)[[:space:]]*(<[^;:{]+>)?[[:space:]]*(\{|:[^;\{()]*\{)" "(?:class|struct)[^;{]+\\<\5\\>\\s*[;{]" \5

!scan-path "../include/boost/fixed_point" "fixed_point.hpp"
!scan-path "../include/boost/fixed_point" "fixed_point_negatable.hpp"
#!scan-path "../include/boost/fixed_point" "fixed_point.nonnegative.hpp"
!scan-path "../include/boost/fixed_point" "fixed_point_negatable_cmath.hpp"
!scan-path "../include/boost/fixed_point" "fixed_point_negatable_next.hpp"
!scan-path "../include/boost/fixed_point" "fixed_point_overflow.hpp"
!scan-path "../include/boost/fixed_point" fixed_point_round.hpp"

# Might be useful to Doxygen document everything for maintenance?
#!scan-path "../include/boost/fixed_point/detail/" ".*\.hpp" true

# Index all examples.
!scan-path "../example" ".*\.cpp" true
# Might index examples too?
!scan-path "../test" ".*\.cpp" true

dec
hex
precision
oct
scientific

#  Misc terms to index.
acknowledgement (?i)\<acknowledgement\w*\>
bare-metal \<\w*(bare|metal)\w*\>
derivative
example \<example\w*\>
FAQ
header
history
microcontroller
mandelbrot
pi
reference \<reference\w*\>
GMP
Q format

# exclude a few useless search terms
!exclude with
!exclude 2
!exclude the
!exclude and
!exclude x
!exclude is
!exclude O
!exclude of
!exclude a



#  Avoid repeated index entries for acknowledgement
!rewrite-name Acknowledgements,.* acknowledgement




